#pragma once
// This file is auto-generated by 'export_enums.py' in 'https://github.com/johannesgrothe/Smarthome_Bridge'


// region GADGET_IDENTIFIER

// A number identifier for every gadget type
enum class GadgetIdentifier {
    err_type = 0,
    lamp_neopixel_basic = 1,
    lamp_basic = 2,
    fan_westinghouse_ir = 3,
    lamp_westinghouse_ir = 4,
    doorbell_basic = 5,
    wallswitch_basic = 6,
    sensor_motion_hr501 = 7,
    sensor_temperature_dht = 8
};

// Count of the values in GadgetIdentifier
#define GadgetIdentifierCount 8

// Translates a enum identifier to a string identifier
static GadgetIdentifier getGadgetIdentifierFromInt(int in_ident) {
  if (in_ident < 1 || in_ident > GadgetIdentifierCount) {
    return GadgetIdentifier::err_type;
  }
  return GadgetIdentifier(in_ident);
}

// endregion


// region CHARACTERISTIC_IDENTIFIER

// A number identifier for every characteristic type
enum class CharacteristicIdentifier {
    err_type = 0,
    status = 1,
    fanSpeed = 2,
    brightness = 3,
    hue = 4,
    saturation = 5,
    temperature = 6,
    humidity = 7
};

// Count of the values in CharacteristicIdentifier
#define CharacteristicIdentifierCount 7

// Translates a enum identifier to a string identifier
static CharacteristicIdentifier getCharacteristicIdentifierFromInt(int in_ident) {
  if (in_ident < 1 || in_ident > CharacteristicIdentifierCount) {
    return CharacteristicIdentifier::err_type;
  }
  return CharacteristicIdentifier(in_ident);
}

// endregion


// region CHARACTERISTIC_UPDATE_STATUS

// The return type for the characteristic update
enum class CharacteristicUpdateStatus {
    general_error = 0,
    unknown_characteristic = 1,
    update_failed = 2,
    no_update_needed = 3,
    update_successful = 4
};

// Count of the values in CharacteristicUpdateStatus
#define CharacteristicUpdateStatusCount 4

// Translates a enum identifier to a string identifier
static CharacteristicUpdateStatus getCharacteristicUpdateStatusFromInt(int in_ident) {
  if (in_ident < 1 || in_ident > CharacteristicUpdateStatusCount) {
    return CharacteristicUpdateStatus::general_error;
  }
  return CharacteristicUpdateStatus(in_ident);
}

// endregion


// region GADGET_METHOD

// A number identifier for every gadget method
enum class GadgetMethod {
    err_type = 0,
    turnOn = 1,
    turnOff = 2,
    toggleStatus = 3,
    brightnessUp = 4,
    brightnessDown = 5,
    volumeUp = 6,
    volumeDown = 7,
    mute = 8,
    unmute = 9,
    toggleMute = 10,
    mode0 = 11,
    mode1 = 12,
    mode2 = 13,
    mode3 = 14,
    mode4 = 15,
    modeUp = 16,
    modeDown = 17
};

// Count of the values in GadgetMethod
#define GadgetMethodCount 17

// Translates a enum identifier to a string identifier
static GadgetMethod getGadgetMethodFromInt(int in_ident) {
  if (in_ident < 1 || in_ident > GadgetMethodCount) {
    return GadgetMethod::err_type;
  }
  return GadgetMethod(in_ident);
}

// endregion

