name: PlatformIO CI

on: [push]

jobs:
  build:
  
    name: Build PlatformIO Project

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

    - name: Set up Python
      uses: actions/setup-python@v2

    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio

    - name: Init PlatformIO Project
      run: pio init
      
    - name: Install PlatformIO Libraries
      run: pio lib install

    - name: Compile PlatformIO Project
      run: pio run

  static_tests:
  
    name: Run Static Unit Tests

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
        
    - name: Install Clang
      run: sudo apt-get install clang

    - name: Set up Python
      uses: actions/setup-python@v2
      
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio

    - name: Init PlatformIO Project
      run: pio init
      
    - name: Install PlatformIO Libraries
      run: pio lib install

    - name: Set C Compiler
      run: export CMAKE_C_COMPILER=clang
    
    - name: Set C++ Compiler
      run: export CMAKE_CXX_COMPILER=clang
      
    - run: echo $CMAKE_C_COMPILER
    - run: echo $CMAKE_CXX_COMPILER

    - name: Run Tests
      run: cd test_static && python3 run_static_tests.py
